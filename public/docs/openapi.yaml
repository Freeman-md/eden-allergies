openapi: 3.0.3
info:
  title: 'Eden Allergies API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/{fallbackPlaceholder}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Eden Allergies</title>\n\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/brands.min.css\" integrity=\"sha512-apX8rFN/KxJW8rniQbkvzrshQ3KvyEH+4szT3Sno5svdr6E/CP0QE862yEeLBMUnCqLko8QaugGkzvWS7uNfFQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"\n        />\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" integrity=\"sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"\n        />\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/regular.min.css\" integrity=\"sha512-Nqct4Jg8iYwFRs/C34hjAF5og5HONE2mrrUV1JZUswB+YU7vYSPyIjGMq+EAQYDmOsMuO9VIhKpRUa7GjRKVlg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n\n        <!-- Fonts -->\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n\n        <link rel=\"stylesheet\" href=\"/assets/css/app.css\">\n\n        <style>\n            body {\n                font-family: 'Nunito', sans-serif;\n            }\n        </style>\n    </head>\n    <body class=\"antialiased\">\n        <div id=\"app\">\n            <router-view v-slot=\"{Component}\">\n                <transition name=\"route\" mode=\"out-in\">\n                    <component :is=\"Component\"></component>\n                </transition>\n            </router-view>\n        </div>\n\n        <script src=\"/assets/js/app.js\"></script>\n    </body>\n</html>\n"
      tags:
        - ''
      security: []
    parameters:
      -
        in: path
        name: fallbackPlaceholder
        description: ''
        example: ''
        required: true
        schema:
          type: string
  /api/allergies:
    get:
      summary: 'GET api/allergies'
      description: 'Display a listing of allergies'
      parameters:
        -
          in: query
          name: page
          description: 'Page number to show.'
          example: 18
          required: false
          schema:
            type: integer
            description: 'Page number to show.'
            example: 18
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: '10'
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: '/?page=1'
                      last: '/?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: '/?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: /
                      per_page: '10'
                      to: 2
                      total: 2
      tags:
        - 'Allergy Endpoints'
      security: []
    post:
      summary: 'POST api/allergies'
      description: 'Store a newly created allergy in storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: null
                    description: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      meals: 'http://localhost:8000/api/allergies//meals/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
      tags:
        - 'Allergy Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the allergy'
                  example: debitis
                description:
                  type: string
                  description: 'The description of the allergy'
                  example: deserunt
              required:
                - title
  '/api/allergies/{id}':
    get:
      summary: 'GET api/allergies/{id}'
      description: 'Get a specific allergy'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: null
                    description: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      meals: 'http://localhost:8000/api/allergies//meals/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
      tags:
        - 'Allergy Endpoints'
      security: []
    put:
      summary: 'PUT api/allergies/{id}'
      description: 'Update the specified allergy in storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: null
                    description: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      meals: 'http://localhost:8000/api/allergies//meals/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
      tags:
        - 'Allergy Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The new title of the allergy'
                  example: qui
                description:
                  type: string
                  description: 'The new description of the allergy'
                  example: velit
              required:
                - title
    delete:
      summary: 'DELETE api/allergies/{id}'
      description: 'Remove the specified allergy from storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: null
                    description: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      meals: 'http://localhost:8000/api/allergies//meals/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
      tags:
        - 'Allergy Endpoints'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the allergy.'
        example: 18
        required: true
        schema:
          type: integer
  '/api/allergies/{allergy}/meals':
    get:
      summary: 'GET api/allergies/{id}/meals'
      description: 'Display meals for the specified allergy from storage'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: null
                      title: 'Aut ea.'
                      description: 'Quisquam esse eius et fugit ex excepturi.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
                    -
                      id: null
                      title: Nihil.
                      description: 'Aperiam ullam voluptatem qui enim aliquam nostrum quibusdam aliquam sit tenetur.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: '10'
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: null
                        title: 'Aut ea.'
                        description: 'Quisquam esse eius et fugit ex excepturi.'
                        allergy: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          items: 'http://localhost:8000/api/meals//items/'
                      -
                        id: null
                        title: Nihil.
                        description: 'Aperiam ullam voluptatem qui enim aliquam nostrum quibusdam aliquam sit tenetur.'
                        allergy: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          items: 'http://localhost:8000/api/meals//items/'
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: '/?page=1'
                      last: '/?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: '/?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: /
                      per_page: '10'
                      to: 2
                      total: 2
      tags:
        - 'Allergy Endpoints'
      security: []
    parameters:
      -
        in: path
        name: allergy
        description: ''
        example: 4
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: 'POST api/register'
      description: "Create new user account\n\nGet New Authorization Token"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Auth Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the new account'
                  example: quia
                email:
                  type: string
                  description: 'Email Address of the new account'
                  example: placeat
                password:
                  type: string
                  description: 'Password of the new account'
                  example: dolores
                password_confirmation:
                  type: string
                  description: 'Password Confirmation'
                  example: itaque
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'POST api/login'
      description: "Login to registered account\n\nGet New Authorization Token"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Auth Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Email Address of registered account'
                  example: voluptatem
                password:
                  type: string
                  description: 'Password of registered account'
                  example: qui
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'POST api/logout'
      description: "Logout of account\n\nDelete Authorization Token"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Auth Endpoints'
  /api/items:
    get:
      summary: 'GET api/items'
      description: 'Display a listing of items.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 288
                      title: Quidem.
                      description: 'Ab est deserunt minima.'
                      category: ''
                      created_at: '2021-08-08T12:52:06.000000Z'
                      updated_at: '2021-08-08T12:52:06.000000Z'
                      deleted_at: null
                    -
                      id: 289
                      title: Nemo.
                      description: 'Eos explicabo debitis.'
                      category: ''
                      created_at: '2021-08-08T12:52:06.000000Z'
                      updated_at: '2021-08-08T12:52:06.000000Z'
                      deleted_at: null
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: '10'
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 288
                        title: Quidem.
                        description: 'Ab est deserunt minima.'
                        category: ''
                        created_at: '2021-08-08T12:52:06.000000Z'
                        updated_at: '2021-08-08T12:52:06.000000Z'
                        deleted_at: null
                      -
                        id: 289
                        title: Nemo.
                        description: 'Eos explicabo debitis.'
                        category: ''
                        created_at: '2021-08-08T12:52:06.000000Z'
                        updated_at: '2021-08-08T12:52:06.000000Z'
                        deleted_at: null
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: '/?page=1'
                      last: '/?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: '/?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: /
                      per_page: '10'
                      to: 2
                      total: 2
      tags:
        - 'Item Endpoints'
      security: []
    post:
      summary: 'POST api/items'
      description: 'Store a newly created item in storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 293
                    title: Quidem.
                    description: 'Sed natus atque quidem sunt.'
                    category: ''
                    created_at: '2021-08-08T12:52:06.000000Z'
                    updated_at: '2021-08-08T12:52:06.000000Z'
                    deleted_at: null
                properties:
                  data:
                    type: object
                    example:
                      id: 293
                      title: Quidem.
                      description: 'Sed natus atque quidem sunt.'
                      category: ''
                      created_at: '2021-08-08T12:52:06.000000Z'
                      updated_at: '2021-08-08T12:52:06.000000Z'
                      deleted_at: null
      tags:
        - 'Item Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the meal'
                  example: est
                description:
                  type: string
                  description: 'The description of the meal'
                  example: quas
              required:
                - title
  '/api/items/{id}':
    get:
      summary: 'GET api/items/{id}'
      description: 'Display the specified item.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 290
                    title: 'Sed et.'
                    description: 'Iure impedit quibusdam.'
                    category: ''
                    created_at: '2021-08-08T12:52:06.000000Z'
                    updated_at: '2021-08-08T12:52:06.000000Z'
                    deleted_at: null
                properties:
                  data:
                    type: object
                    example:
                      id: 290
                      title: 'Sed et.'
                      description: 'Iure impedit quibusdam.'
                      category: ''
                      created_at: '2021-08-08T12:52:06.000000Z'
                      updated_at: '2021-08-08T12:52:06.000000Z'
                      deleted_at: null
      tags:
        - 'Item Endpoints'
      security: []
    put:
      summary: 'PUT api/items/{id}'
      description: 'Update the specified item in storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 294
                    title: Iure.
                    description: 'Sed soluta aut pariatur sunt non.'
                    category: ''
                    created_at: '2021-08-08T12:52:07.000000Z'
                    updated_at: '2021-08-08T12:52:07.000000Z'
                    deleted_at: null
                properties:
                  data:
                    type: object
                    example:
                      id: 294
                      title: Iure.
                      description: 'Sed soluta aut pariatur sunt non.'
                      category: ''
                      created_at: '2021-08-08T12:52:07.000000Z'
                      updated_at: '2021-08-08T12:52:07.000000Z'
                      deleted_at: null
      tags:
        - 'Item Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The new title of the meal'
                  example: pariatur
                description:
                  type: string
                  description: 'The new description of the meal'
                  example: qui
              required:
                - title
    delete:
      summary: 'DELETE api/items/{id}'
      description: 'Remove the specified item from storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 295
                    title: Sit.
                    description: 'Numquam officia eius error dolorem dolorum.'
                    category: ''
                    created_at: '2021-08-08T12:52:07.000000Z'
                    updated_at: '2021-08-08T12:52:07.000000Z'
                    deleted_at: null
                properties:
                  data:
                    type: object
                    example:
                      id: 295
                      title: Sit.
                      description: 'Numquam officia eius error dolorem dolorum.'
                      category: ''
                      created_at: '2021-08-08T12:52:07.000000Z'
                      updated_at: '2021-08-08T12:52:07.000000Z'
                      deleted_at: null
      tags:
        - 'Item Endpoints'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: 12
        required: true
        schema:
          type: integer
  /api/meals:
    get:
      summary: 'GET api/meals'
      description: 'Display a listing of meals'
      parameters:
        -
          in: query
          name: page
          description: 'Page number to show.'
          example: 15
          required: false
          schema:
            type: integer
            description: 'Page number to show.'
            example: 15
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: null
                      title: 'Aut sunt.'
                      description: 'Qui quas corporis aut voluptatem et quas aut debitis.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
                    -
                      id: null
                      title: Dolores.
                      description: 'Accusantium dolor sed voluptatum et et qui nobis earum quia praesentium.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: '10'
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: null
                        title: 'Aut sunt.'
                        description: 'Qui quas corporis aut voluptatem et quas aut debitis.'
                        allergy: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          items: 'http://localhost:8000/api/meals//items/'
                      -
                        id: null
                        title: Dolores.
                        description: 'Accusantium dolor sed voluptatum et et qui nobis earum quia praesentium.'
                        allergy: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          items: 'http://localhost:8000/api/meals//items/'
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: '/?page=1'
                      last: '/?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: '/?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: /
                      per_page: '10'
                      to: 2
                      total: 2
      tags:
        - 'Meal Endpoints'
      security: []
    post:
      summary: 'POST api/meals'
      description: 'Store a newly created meal in storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: Omnis.
                    description: 'Vitae provident facilis in assumenda saepe rerum et nulla.'
                    allergy: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      items: 'http://localhost:8000/api/meals//items/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: Omnis.
                      description: 'Vitae provident facilis in assumenda saepe rerum et nulla.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
      tags:
        - 'Meal Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                allergy:
                  type: string
                  description: ''
                  example: ea
                title:
                  type: string
                  description: 'The new title of the meal'
                  example: sed
                description:
                  type: string
                  description: 'The new description of the meal'
                  example: quia
              required:
                - allergy
                - title
  '/api/meals/{id}':
    get:
      summary: 'GET api/meals/{id}'
      description: 'Display the specified meal.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: Itaque.
                    description: 'Quasi ut sint impedit aliquid magni minima et.'
                    allergy: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      items: 'http://localhost:8000/api/meals//items/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: Itaque.
                      description: 'Quasi ut sint impedit aliquid magni minima et.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
      tags:
        - 'Meal Endpoints'
      security: []
    put:
      summary: 'PUT api/meals/{id}'
      description: 'Update the specified resource in storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: Assumenda.
                    description: 'Esse quia omnis dicta laborum mollitia aliquid qui magnam cumque.'
                    allergy: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      items: 'http://localhost:8000/api/meals//items/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: Assumenda.
                      description: 'Esse quia omnis dicta laborum mollitia aliquid qui magnam cumque.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
      tags:
        - 'Meal Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The new title of the meal'
                  example: enim
                description:
                  type: string
                  description: 'The new description of the meal'
                  example: praesentium
              required:
                - title
    delete:
      summary: 'DELETE api/meals/{id}'
      description: 'Remove the specified resource from storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: null
                    title: 'Eum quis.'
                    description: 'In earum accusamus neque sed necessitatibus ipsam cum.'
                    allergy: null
                    created_at: null
                    updated_at: null
                    deleted_at: null
                    links:
                      items: 'http://localhost:8000/api/meals//items/'
                properties:
                  data:
                    type: object
                    example:
                      id: null
                      title: 'Eum quis.'
                      description: 'In earum accusamus neque sed necessitatibus ipsam cum.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
      tags:
        - 'Meal Endpoints'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the meal.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/meals/{meal}/items':
    get:
      summary: 'GET api/meals/{id}/items'
      description: 'Get items for the specified meal from storage'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 291
                      title: 'Aut ut.'
                      description: 'Ea saepe vel.'
                      category: ''
                      created_at: '2021-08-08T12:52:06.000000Z'
                      updated_at: '2021-08-08T12:52:06.000000Z'
                      deleted_at: null
                    -
                      id: 292
                      title: Qui.
                      description: 'Eum voluptas dolorem iste eum aut.'
                      category: ''
                      created_at: '2021-08-08T12:52:06.000000Z'
                      updated_at: '2021-08-08T12:52:06.000000Z'
                      deleted_at: null
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: '10'
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 291
                        title: 'Aut ut.'
                        description: 'Ea saepe vel.'
                        category: ''
                        created_at: '2021-08-08T12:52:06.000000Z'
                        updated_at: '2021-08-08T12:52:06.000000Z'
                        deleted_at: null
                      -
                        id: 292
                        title: Qui.
                        description: 'Eum voluptas dolorem iste eum aut.'
                        category: ''
                        created_at: '2021-08-08T12:52:06.000000Z'
                        updated_at: '2021-08-08T12:52:06.000000Z'
                        deleted_at: null
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: '/?page=1'
                      last: '/?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: '/?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: /
                      per_page: '10'
                      to: 2
                      total: 2
      tags:
        - 'Meal Endpoints'
      security: []
    parameters:
      -
        in: path
        name: meal
        description: ''
        example: 3
        required: true
        schema:
          type: integer
  /api/users/allergies:
    get:
      summary: 'GET  api/users/allergies'
      description: 'Get allergies for authenticated user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                    items:
                      type: object
      tags:
        - 'User Endpoints'
  /api/users/allergies/add:
    post:
      summary: 'POST  api/users/allergies/add'
      description: 'Add allergies for authenticated user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                    items:
                      type: object
      tags:
        - 'User Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                allergies:
                  type: array
                  description: 'Array of allergy ids to add.'
                  example:
                    - 4
                    - 6
                  items:
                    type: integer
              required:
                - allergies
  /api/users/allergies/remove:
    post:
      summary: 'POST  api/users/allergies/remove'
      description: 'Remove allergies for authenticated user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                    -
                      id: null
                      title: null
                      description: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        meals: 'http://localhost:8000/api/allergies//meals/'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                      -
                        id: null
                        title: null
                        description: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          meals: 'http://localhost:8000/api/allergies//meals/'
                    items:
                      type: object
      tags:
        - 'User Endpoints'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                allergies:
                  type: array
                  description: 'Array of allergy ids to add.'
                  example:
                    - 4
                    - 6
                  items:
                    type: integer
              required:
                - allergies
  /api/users/allergies/meals:
    get:
      summary: 'GET api/users/allergies/meals'
      description: 'Get Meal Recommendations For User'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: null
                      title: Ipsam.
                      description: 'Qui doloremque possimus in ut animi aperiam facilis magnam atque dolor cumque laudantium rerum.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
                    -
                      id: null
                      title: 'Sed est.'
                      description: 'Maxime ab modi tempore harum totam facere eaque excepturi et qui aut non.'
                      allergy: null
                      created_at: null
                      updated_at: null
                      deleted_at: null
                      links:
                        items: 'http://localhost:8000/api/meals//items/'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: null
                        title: Ipsam.
                        description: 'Qui doloremque possimus in ut animi aperiam facilis magnam atque dolor cumque laudantium rerum.'
                        allergy: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          items: 'http://localhost:8000/api/meals//items/'
                      -
                        id: null
                        title: 'Sed est.'
                        description: 'Maxime ab modi tempore harum totam facere eaque excepturi et qui aut non.'
                        allergy: null
                        created_at: null
                        updated_at: null
                        deleted_at: null
                        links:
                          items: 'http://localhost:8000/api/meals//items/'
                    items:
                      type: object
      tags:
        - 'User Endpoints'
  /api/user:
    get:
      summary: 'GET  api/user'
      description: 'Get authenticated user details'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated
                properties:
                  message:
                    type: string
                    example: Unauthenticated
      tags:
        - 'User Endpoints'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
